{"ast":null,"code":"import{axiosInstance,url}from\"./index\";export const createNewMessage=async message=>{try{const response=await axiosInstance.post(url+\"api/message/new-message\",message);return response.data;}catch(error){return error;}};export const getAllMessages=async chatId=>{try{const response=await axiosInstance.get(url+`api/message/get-all-messages/${chatId}`);return response.data;}catch(error){return error;}};","map":{"version":3,"names":["axiosInstance","url","createNewMessage","message","response","post","data","error","getAllMessages","chatId","get"],"sources":["D:/Java material/Projects/Chating Application/quick-chat-app-/client/src/apiCalls/message.js"],"sourcesContent":["import { axiosInstance, url } from \"./index\";\r\n\r\nexport const createNewMessage = async (message) => {\r\n  try {\r\n    const response = await axiosInstance.post(\r\n      url + \"api/message/new-message\",\r\n      message\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const getAllMessages = async (chatId) => {\r\n  try {\r\n    const response = await axiosInstance.get(\r\n      url + `api/message/get-all-messages/${chatId}`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,GAAG,KAAQ,SAAS,CAE5C,MAAO,MAAM,CAAAC,gBAAgB,CAAG,KAAO,CAAAC,OAAO,EAAK,CACjD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,aAAa,CAACK,IAAI,CACvCJ,GAAG,CAAG,yBAAyB,CAC/BE,OACF,CAAC,CACD,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,MAAO,CAAAA,KAAK,CACd,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAO,CAAAC,MAAM,EAAK,CAC9C,GAAI,CACF,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAJ,aAAa,CAACU,GAAG,CACtCT,GAAG,CAAG,gCAAgCQ,MAAM,EAC9C,CAAC,CACD,MAAO,CAAAL,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,MAAO,CAAAA,KAAK,CACd,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Java material\\\\Projects\\\\Chating Application\\\\quick-chat-app-\\\\client\\\\src\\\\pages\\\\home\\\\components\\\\chat.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNewMessage, getAllMessages } from \"../../../apiCalls/message\";\nimport { hideLoader, showLoader } from \"../../../redux/loaderSlice\";\nimport toast from \"react-hot-toast\";\nimport { useEffect, useState } from \"react\";\nimport { clearUnreadMessageCount } from './../../../apiCalls/chat';\nimport moment from \"moment\";\nimport store from './../../../redux/store';\nimport { setAllChats, setSelectedChat } from \"../../../redux/usersSlice\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatArea({\n  socket\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    selectedChat,\n    user,\n    allChats\n  } = useSelector(state => state.userReducer);\n  const selectedUser = selectedChat.members.find(u => u._id !== user._id);\n  const [message, setMessage] = useState('');\n  const [allMessages, setAllMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [data, setData] = useState(null);\n  const sendMessage = async image => {\n    try {\n      const newMessage = {\n        chatId: selectedChat._id,\n        sender: user._id,\n        text: message,\n        image: image\n      };\n      socket.emit('send-message', {\n        ...newMessage,\n        members: selectedChat.members.map(m => m._id),\n        read: false,\n        createdAt: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n      });\n      const response = await createNewMessage(newMessage);\n      if (response.success) {\n        setMessage('');\n        setShowEmojiPicker(false);\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  const formatTime = timestamp => {\n    const now = moment();\n    const diff = now.diff(moment(timestamp), 'days');\n    if (diff < 1) {\n      return `Today ${moment(timestamp).format('hh:mm A')}`;\n    } else if (diff === 1) {\n      return `Yesterday ${moment(timestamp).format('hh:mm A')}`;\n    } else {\n      return moment(timestamp).format('MMM D, hh:mm A');\n    }\n  };\n  const getMessages = async () => {\n    try {\n      dispatch(showLoader());\n      const response = await getAllMessages(selectedChat._id);\n      dispatch(hideLoader());\n      if (response.success) {\n        setAllMessages(response.data);\n      }\n    } catch (error) {\n      dispatch(hideLoader());\n      toast.error(error.message);\n    }\n  };\n  const clearUnreadMessages = async () => {\n    try {\n      socket.emit('clear-unread-messages', {\n        chatId: selectedChat._id,\n        members: selectedChat.members.map(m => m._id)\n      });\n      const response = await clearUnreadMessageCount(selectedChat._id);\n      if (response.success) {\n        allChats.map(chat => {\n          if (chat._id === selectedChat._id) {\n            return response.data;\n          }\n          return chat;\n        });\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  function formatName(user) {\n    let fname = user.firstname.at(0).toUpperCase() + user.firstname.slice(1).toLowerCase();\n    let lname = user.lastname.at(0).toUpperCase() + user.lastname.slice(1).toLowerCase();\n    return fname + ' ' + lname;\n  }\n  const sendImage = async e => {\n    const file = e.target.files[0];\n    const reader = new FileReader(file);\n    reader.readAsDataURL(file);\n    reader.onloadend = async () => {\n      sendMessage(reader.result);\n    };\n  };\n  useEffect(() => {\n    var _selectedChat$lastMes;\n    getMessages();\n    if ((selectedChat === null || selectedChat === void 0 ? void 0 : (_selectedChat$lastMes = selectedChat.lastMessage) === null || _selectedChat$lastMes === void 0 ? void 0 : _selectedChat$lastMes.sender) !== user._id) {\n      clearUnreadMessages();\n    }\n    socket.off('receive-message').on('receive-message', message => {\n      const selectedChat = store.getState().userReducer.selectedChat;\n      if (selectedChat._id === message.chatId) {\n        setAllMessages(prevmsg => [...prevmsg, message]);\n      }\n      if (selectedChat._id === message.chatId && message.sender !== user._id) {\n        clearUnreadMessages();\n      }\n    });\n    socket.on('message-count-cleared', data => {\n      const selectedChat = store.getState().userReducer.selectedChat;\n      const allChats = store.getState().userReducer.allChats;\n      if (selectedChat._id === data.chatId) {\n        //UPDATING UNREAD MESSAGE COUNT IN CHAT OBJECT\n        const updatedChats = allChats.map(chat => {\n          if (chat._id === data.chatId) {\n            return {\n              ...chat,\n              unreadMessageCount: 0\n            };\n          }\n          return chat;\n        });\n        dispatch(setAllChats(updatedChats));\n\n        //UPDATING READ PROPRTY IN MESSAGE OBJECT\n        setAllMessages(prevMsgs => {\n          return prevMsgs.map(msg => {\n            return {\n              ...msg,\n              read: true\n            };\n          });\n        });\n      }\n    });\n    socket.on('started-typing', data => {\n      setData(data);\n      if (selectedChat._id === data.chatId && data.sender !== user._id) {\n        setIsTyping(true);\n        setTimeout(() => {\n          setIsTyping(false);\n        }, 2000);\n      }\n    });\n  }, [selectedChat]);\n  useEffect(() => {\n    const msgContainer = document.getElementById('main-chat-area');\n    msgContainer.scrollTop = msgContainer.scrollHeight;\n  }, [allMessages, isTyping]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"app-chat-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"app-chat-area-header\",\n        children: formatName(selectedUser)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-chat-area\",\n        id: \"main-chat-area\",\n        children: [allMessages.map(msg => {\n          const isCurrentUserSender = msg.sender === user._id;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-container\",\n            style: isCurrentUserSender ? {\n              justifyContent: 'end'\n            } : {\n              justifyContent: 'start'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUserSender ? \"send-message\" : \"received-message\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: msg.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: msg.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: msg.image,\n                    alt: \"image\",\n                    height: \"120\",\n                    width: \"120\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 68\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-timestamp\",\n                style: isCurrentUserSender ? {\n                  float: 'right'\n                } : {\n                  float: 'left'\n                },\n                children: [formatTime(msg.createdAt), \" \", isCurrentUserSender && msg.read && /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-check-circle\",\n                  \"aria-hidden\": \"true\",\n                  style: {\n                    color: '#e74c3c'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 36\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: isTyping && (selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.members.map(m => m._id).includes(data === null || data === void 0 ? void 0 : data.sender)) && /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 106\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          display: 'flex',\n          padding: '0px 20px',\n          justifyContent: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n          style: {\n            width: '300px',\n            height: '400px'\n          },\n          onEmojiClick: e => setMessage(message + e.emoji)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"send-message-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"send-message-input\",\n          placeholder: \"Type a message\",\n          value: message,\n          onChange: e => {\n            setMessage(e.target.value);\n            socket.emit('user-typing', {\n              chatId: selectedChat._id,\n              members: selectedChat.members.map(m => m._id),\n              sender: user._id\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"file\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-picture-o send-image-btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file\",\n            style: {\n              display: 'none'\n            },\n            accept: \"image/jpg,image/png,image/jpeg,image/gif\",\n            onChange: sendImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fa fa-smile-o send-emoji-btn\",\n          \"aria-hidden\": \"true\",\n          onClick: () => {\n            setShowEmojiPicker(!showEmojiPicker);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fa fa-paper-plane send-message-btn\",\n          \"aria-hidden\": \"true\",\n          onClick: () => sendMessage('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 30\n    }, this)\n  }, void 0, false);\n}\n_s(ChatArea, \"94dEoMCiBI7F3TfSO1udmVJp/w8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ChatArea;\nexport default ChatArea;\nvar _c;\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"names":["useDispatch","useSelector","createNewMessage","getAllMessages","hideLoader","showLoader","toast","useEffect","useState","clearUnreadMessageCount","moment","store","setAllChats","setSelectedChat","EmojiPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatArea","socket","_s","dispatch","selectedChat","user","allChats","state","userReducer","selectedUser","members","find","u","_id","message","setMessage","allMessages","setAllMessages","isTyping","setIsTyping","showEmojiPicker","setShowEmojiPicker","data","setData","sendMessage","image","newMessage","chatId","sender","text","emit","map","m","read","createdAt","format","response","success","error","formatTime","timestamp","now","diff","getMessages","clearUnreadMessages","chat","formatName","fname","firstname","at","toUpperCase","slice","toLowerCase","lname","lastname","sendImage","e","file","target","files","reader","FileReader","readAsDataURL","onloadend","result","_selectedChat$lastMes","lastMessage","off","on","getState","prevmsg","updatedChats","unreadMessageCount","prevMsgs","msg","setTimeout","msgContainer","document","getElementById","scrollTop","scrollHeight","children","class","fileName","_jsxFileName","lineNumber","columnNumber","className","id","isCurrentUserSender","style","justifyContent","src","alt","height","width","float","color","includes","display","padding","onEmojiClick","emoji","type","placeholder","value","onChange","for","accept","onClick","_c","$RefreshReg$"],"sources":["D:/Java material/Projects/Chating Application/quick-chat-app-/client/src/pages/home/components/chat.js"],"sourcesContent":["\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewMessage, getAllMessages } from \"../../../apiCalls/message\";\r\nimport { hideLoader, showLoader } from \"../../../redux/loaderSlice\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { clearUnreadMessageCount } from './../../../apiCalls/chat';\r\nimport moment from \"moment\";\r\nimport store from './../../../redux/store';\r\nimport { setAllChats, setSelectedChat } from \"../../../redux/usersSlice\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\n\r\nfunction ChatArea({ socket }){\r\n    const dispatch = useDispatch();\r\n    const { selectedChat, user, allChats } = useSelector(state => state.userReducer);\r\n    const selectedUser = selectedChat.members.find( u => u._id !== user._id);\r\n    const [message, setMessage] = useState('');\r\n    const [allMessages, setAllMessages] = useState([]);\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    const sendMessage = async (image) => {\r\n        try{\r\n            const newMessage = {\r\n                chatId: selectedChat._id,\r\n                sender: user._id,\r\n                text: message,\r\n                image: image\r\n            }\r\n\r\n            socket.emit('send-message', {\r\n                ...newMessage,\r\n                members: selectedChat.members.map(m => m._id),\r\n                read: false,\r\n                createdAt: moment().format(\"YYYY-MM-DD HH:mm:ss\")\r\n            })\r\n\r\n            const response = await createNewMessage(newMessage);\r\n\r\n            if(response.success){\r\n                setMessage('');\r\n                setShowEmojiPicker(false);\r\n            }\r\n        }catch(error){\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n\r\n    const formatTime = (timestamp) => {\r\n        const now = moment();\r\n        const diff = now.diff(moment(timestamp), 'days')\r\n\r\n        if(diff < 1){\r\n            return `Today ${moment(timestamp).format('hh:mm A')}`;\r\n        }else if(diff === 1){\r\n            return `Yesterday ${moment(timestamp).format('hh:mm A')}`;\r\n        }else {\r\n            return moment(timestamp).format('MMM D, hh:mm A');\r\n        }\r\n    }\r\n\r\n    const getMessages = async () => {\r\n        try{\r\n            dispatch(showLoader())\r\n            const response = await getAllMessages(selectedChat._id);\r\n            dispatch(hideLoader())\r\n\r\n            if(response.success){\r\n                setAllMessages(response.data);\r\n            }\r\n        }catch(error){\r\n            dispatch(hideLoader());\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n\r\n    const clearUnreadMessages = async () => {\r\n        try{\r\n            socket.emit('clear-unread-messages', {\r\n                chatId: selectedChat._id,\r\n                members: selectedChat.members.map(m => m._id)\r\n            })\r\n            const response = await clearUnreadMessageCount(selectedChat._id);\r\n\r\n            if(response.success){\r\n                allChats.map(chat => {\r\n                    if(chat._id === selectedChat._id){\r\n                        return response.data;\r\n                    }\r\n                    return chat;\r\n                })\r\n            }\r\n        }catch(error){\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n\r\n    function formatName(user){\r\n        let fname = user.firstname.at(0).toUpperCase() + user.firstname.slice(1).toLowerCase();\r\n        let lname = user.lastname.at(0).toUpperCase() + user.lastname.slice(1).toLowerCase();\r\n        return fname + ' ' + lname;\r\n    }\r\n\r\n    const sendImage = async (e) => {\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader(file);\r\n        reader.readAsDataURL(file);\r\n\r\n        reader.onloadend = async () => {\r\n            sendMessage(reader.result);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMessages();\r\n        if(selectedChat?.lastMessage?.sender !== user._id){\r\n         clearUnreadMessages();\r\n        }\r\n\r\n        socket.off('receive-message').on('receive-message', (message) => {\r\n            const selectedChat = store.getState().userReducer.selectedChat;\r\n            if(selectedChat._id === message.chatId){\r\n                setAllMessages(prevmsg => [...prevmsg, message]);\r\n            }\r\n\r\n            if(selectedChat._id === message.chatId && message.sender !== user._id){\r\n                clearUnreadMessages();\r\n            }\r\n        })\r\n\r\n        socket.on('message-count-cleared', data => {\r\n            const selectedChat = store.getState().userReducer.selectedChat;\r\n            const allChats = store.getState().userReducer.allChats;\r\n\r\n            if(selectedChat._id === data.chatId){\r\n                //UPDATING UNREAD MESSAGE COUNT IN CHAT OBJECT\r\n                const updatedChats = allChats.map(chat => {\r\n                    if(chat._id === data.chatId){\r\n                        return { ...chat, unreadMessageCount: 0}\r\n                    }\r\n                    return chat;\r\n                })\r\n                dispatch(setAllChats(updatedChats));\r\n\r\n                //UPDATING READ PROPRTY IN MESSAGE OBJECT\r\n                setAllMessages(prevMsgs => {\r\n                    return prevMsgs.map(msg => {\r\n                        return {...msg, read: true}\r\n                    })\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('started-typing', (data) => {\r\n            setData(data);\r\n            if(selectedChat._id === data.chatId && data.sender !== user._id){\r\n                setIsTyping(true);\r\n                setTimeout(() => {\r\n                    setIsTyping(false);\r\n                }, 2000)\r\n            }\r\n        })\r\n    }, [selectedChat])\r\n\r\n    useEffect(() => {\r\n        const msgContainer = document.getElementById('main-chat-area');\r\n        msgContainer.scrollTop = msgContainer.scrollHeight;\r\n    }, [allMessages, isTyping])\r\n\r\n    return <>\r\n            {selectedChat && <div class=\"app-chat-area\">\r\n                    <div class=\"app-chat-area-header\">\r\n                        { formatName(selectedUser)}\r\n                    </div>\r\n\r\n                    <div className=\"main-chat-area\" id=\"main-chat-area\">\r\n                        { allMessages.map(msg => {\r\n                            const isCurrentUserSender = msg.sender === user._id;\r\n\r\n                            return <div className=\"message-container\" style={isCurrentUserSender ? {justifyContent: 'end'} : {justifyContent: 'start'}}>\r\n                                        <div>\r\n                                            <div className={isCurrentUserSender ? \"send-message\" : \"received-message\"}>\r\n                                                <div>{ msg.text }</div>\r\n                                                <div>{msg.image && <img src={msg.image} alt=\"image\" height=\"120\" width=\"120\"></img>}</div>\r\n                                            </div>\r\n                                            <div className=\"message-timestamp\" \r\n                                                 style={isCurrentUserSender ? {float: 'right'} : {float: 'left'}}\r\n                                            >\r\n                                                { formatTime(msg.createdAt) } {isCurrentUserSender && msg.read && \r\n                                                    <i className=\"fa fa-check-circle\" aria-hidden=\"true\" style={{color: '#e74c3c'}}></i>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                        })}\r\n                        <div className=\"typing-indicator\">\r\n                            {isTyping && selectedChat?.members.map(m => m._id).includes(data?.sender) && <i>typing...</i>}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {showEmojiPicker && \r\n                        <div style={{width: '100%', display: 'flex', padding: '0px 20px', justifyContent: 'right'}}>\r\n                            <EmojiPicker style={{width: '300px', height: '400px'}} onEmojiClick={(e) => setMessage(message + e.emoji)}></EmojiPicker>\r\n                        </div>\r\n                    }\r\n                    <div className=\"send-message-div\">\r\n                        <input type=\"text\" \r\n                            className=\"send-message-input\" \r\n                            placeholder=\"Type a message\"\r\n                            value={message}\r\n                            onChange={ (e) => { \r\n                                setMessage(e.target.value)\r\n                                socket.emit('user-typing', {\r\n                                    chatId: selectedChat._id,\r\n                                    members: selectedChat.members.map(m => m._id),\r\n                                    sender: user._id\r\n                                })\r\n                            } \r\n                        }\r\n                        />\r\n                        \r\n                        <label for=\"file\">\r\n                            <i className=\"fa fa-picture-o send-image-btn\"></i>\r\n                            <input\r\n                                type=\"file\"\r\n                                id=\"file\"\r\n                                style={{display: 'none'}}\r\n                                accept=\"image/jpg,image/png,image/jpeg,image/gif\"\r\n                                onChange={sendImage}\r\n                            >\r\n                            </input>\r\n                        </label>\r\n\r\n                        <button \r\n                            className=\"fa fa-smile-o send-emoji-btn\" \r\n                            aria-hidden=\"true\"\r\n                            onClick={ () => { setShowEmojiPicker(!showEmojiPicker)} }>\r\n                        </button>\r\n                        <button \r\n                            className=\"fa fa-paper-plane send-message-btn\" \r\n                            aria-hidden=\"true\"\r\n                            onClick={ () => sendMessage('') }>\r\n                        </button>\r\n                    </div>\r\n                </div>}\r\n        </>\r\n}\r\n\r\nexport default ChatArea;    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
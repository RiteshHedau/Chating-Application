{"ast":null,"code":"import { axiosInstance, url } from './index';\nexport const createNewMessage = async message => {\n  try {\n    const response = await axiosInstance.post('api/message/new-message', message);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\nexport const getAllMessages = async chatId => {\n  try {\n    const response = await axiosInstance.get(`api/message/get-all-messages/${chatId}`);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"names":["axiosInstance","url","createNewMessage","message","response","post","data","error","getAllMessages","chatId","get"],"sources":["D:/Java material/Projects/Chating Application/quick-chat-app-/client/src/apiCalls/message.js"],"sourcesContent":["import { axiosInstance, url } from './index';\r\n\r\nexport const createNewMessage = async ( message ) => {\r\n    try{\r\n        const response = await axiosInstance.post('api/message/new-message', message);\r\n        return response.data;\r\n    }catch(error){\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getAllMessages = async ( chatId ) => {\r\n    try{\r\n        const response = await axiosInstance.get(`api/message/get-all-messages/${chatId}`);\r\n        return response.data;\r\n    }catch(error){\r\n        return error;\r\n    }\r\n}"],"mappings":"AAAA,SAASA,aAAa,EAAEC,GAAG,QAAQ,SAAS;AAE5C,OAAO,MAAMC,gBAAgB,GAAG,MAAQC,OAAO,IAAM;EACjD,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,yBAAyB,EAAEF,OAAO,CAAC;IAC7E,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,QAAMC,KAAK,EAAC;IACT,OAAOA,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAQC,MAAM,IAAM;EAC9C,IAAG;IACC,MAAML,QAAQ,GAAG,MAAMJ,aAAa,CAACU,GAAG,CAAC,gCAAgCD,MAAM,EAAE,CAAC;IAClF,OAAOL,QAAQ,CAACE,IAAI;EACxB,CAAC,QAAMC,KAAK,EAAC;IACT,OAAOA,KAAK;EAChB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
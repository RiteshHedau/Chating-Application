{"ast":null,"code":"var _jsxFileName = \"D:\\\\Java material\\\\Projects\\\\Chating Application\\\\quick-chat-app-\\\\client\\\\src\\\\components\\\\protectedRoute.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getLoggedUser, getAllUsers } from './../apiCalls/users';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { hideLoader, showLoader } from \"../redux/loaderSlice\";\nimport toast from \"react-hot-toast\";\nimport { setAllUsers, setUser, setAllChats } from \"../redux/usersSlice\";\nimport { getAllChats } from \"../apiCalls/chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children\n}) {\n  _s();\n  const {\n    user\n  } = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const getloggedInUser = async () => {\n    let response = null;\n    try {\n      dispatch(showLoader());\n      response = await getLoggedUser();\n      dispatch(hideLoader());\n      if (response.success) {\n        dispatch(setUser(response.data));\n      } else {\n        toast.error(response.message);\n        window.location.href = '/login';\n      }\n    } catch (error) {\n      dispatch(hideLoader());\n      navigate('/login');\n    }\n  };\n  const getAllUsersFromDb = async () => {\n    let response = null;\n    try {\n      dispatch(showLoader());\n      response = await getAllUsers();\n      dispatch(hideLoader());\n      if (response.success) {\n        dispatch(setAllUsers(response.data));\n      } else {\n        toast.error(response.message);\n        window.location.href = '/login';\n      }\n    } catch (error) {\n      dispatch(hideLoader());\n      navigate('/login');\n    }\n  };\n  const getCurrentUserChats = async () => {\n    try {\n      const response = await getAllChats();\n      if (response.success) {\n        dispatch(setAllChats(response.data));\n      }\n    } catch (error) {\n      navigate('/login');\n    }\n  };\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      getloggedInUser();\n      getAllUsersFromDb();\n      getCurrentUserChats();\n    } else {\n      navigate('/login');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(ProtectedRoute, \"N6kDQBiDcJoDZ5v5/C+ZMSXL0A8=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useEffect","useState","useNavigate","getLoggedUser","getAllUsers","useDispatch","useSelector","hideLoader","showLoader","toast","setAllUsers","setUser","setAllChats","getAllChats","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","state","userReducer","dispatch","navigate","getloggedInUser","response","success","data","error","message","window","location","href","getAllUsersFromDb","getCurrentUserChats","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Java material/Projects/Chating Application/quick-chat-app-/client/src/components/protectedRoute.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getLoggedUser, getAllUsers } from './../apiCalls/users';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { hideLoader, showLoader } from \"../redux/loaderSlice\";\r\nimport toast from \"react-hot-toast\";\r\nimport { setAllUsers, setUser, setAllChats } from \"../redux/usersSlice\";\r\nimport { getAllChats } from \"../apiCalls/chat\";\r\n\r\nfunction ProtectedRoute({children}){\r\n    const { user } = useSelector(state => state.userReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const navigate = useNavigate();\r\n \r\n    const getloggedInUser = async () => {\r\n        let response = null;\r\n        try{\r\n            dispatch(showLoader())\r\n            response = await getLoggedUser();\r\n            dispatch(hideLoader())\r\n\r\n            if(response.success){\r\n                dispatch(setUser(response.data));\r\n            }else{\r\n                toast.error(response.message);\r\n                window.location.href = '/login';\r\n            }\r\n        }catch(error){\r\n            dispatch(hideLoader())\r\n            navigate('/login');\r\n        }\r\n    }\r\n\r\n    const getAllUsersFromDb = async () => {\r\n        let response = null;\r\n        try{\r\n            dispatch(showLoader());\r\n            response = await getAllUsers();\r\n            dispatch(hideLoader());\r\n\r\n            if(response.success){\r\n                dispatch(setAllUsers(response.data));\r\n            }else{\r\n                toast.error(response.message);\r\n                window.location.href = '/login';\r\n            }\r\n        }catch(error){\r\n            dispatch(hideLoader())\r\n            navigate('/login');\r\n        }\r\n    }\r\n\r\n    const getCurrentUserChats = async () => {\r\n        try{\r\n            const response = await getAllChats();\r\n            if(response.success){\r\n                dispatch(setAllChats(response.data))\r\n            }\r\n        }catch(error){\r\n            navigate('/login');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem('token')){\r\n            getloggedInUser();\r\n            getAllUsersFromDb();\r\n            getCurrentUserChats();\r\n        }else{\r\n            navigate('/login');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            { children }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}